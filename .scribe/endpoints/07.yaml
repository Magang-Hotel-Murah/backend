name: Transactions
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/transactions
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all transactions'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: 'Optional. Filter transactions by type. Available: hotel, flight, ppob.'
        required: false
        example: hotel
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      type: hotel
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|abcdeEXAMPLETOKEN12345'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/transactions
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      transactionable_id:
        name: transactionable_id
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transactionable_type:
        name: transactionable_type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Must not be greater than 5 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Must not be greater than 50 characters.'
        required: false
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      payment_status:
        name: payment_status
        description: ''
        required: false
        example: expired
        type: string
        enumValues:
          - paid
          - failed
          - expired
        exampleWasSpecified: false
        nullable: false
        custom: []
      paid_at:
        name: paid_at
        description: 'Must be a valid date.'
        required: false
        example: '2025-10-08T07:16:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      transactionable_id: 16
      transactionable_type: architecto
      amount: 4326.41688
      currency: m
      payment_method: i
      payment_status: expired
      paid_at: '2025-10-08T07:16:08'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|abcdeEXAMPLETOKEN12345'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/transactions/{id}'
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get /api/transactions/{id}'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID, external ID, booking code, or invoice number of the transaction.'
        required: false
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|abcdeEXAMPLETOKEN12345'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/transactions/{id}'
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      amount:
        name: amount
        description: ''
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Must not be greater than 5 characters.'
        required: false
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Must not be greater than 50 characters.'
        required: false
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      payment_status:
        name: payment_status
        description: ''
        required: false
        example: expired
        type: string
        enumValues:
          - paid
          - failed
          - expired
        exampleWasSpecified: false
        nullable: false
        custom: []
      paid_at:
        name: paid_at
        description: 'Must be a valid date.'
        required: false
        example: '2025-10-08T07:16:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      amount: 4326.41688
      currency: m
      payment_method: i
      payment_status: expired
      paid_at: '2025-10-08T07:16:08'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|abcdeEXAMPLETOKEN12345'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/transactions/{id}'
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|abcdeEXAMPLETOKEN12345'
    controller: null
    method: null
    route: null
    custom: []
